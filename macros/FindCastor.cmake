# - Find castor
# Find the native castor includes and library
#
#  CASTOR_INCLUDE_DIR - where to find castor/castor.h.
#  CASTOR_LIBRARIES   - List of libraries when using castor.
#  CASTOR_FOUND       - True if castor found.


#IF (CASTOR_INCLUDE_DIR)
# Already in cache, be silent
#  SET(CASTOR_FIND_QUIETLY TRUE)
#ENDIF (CASTOR_INCLUDE_DIR)

FIND_PATH(CASTOR_RFIO_INCLUDE_DIR NAMES rfio_api.h PATHS /usr/include/shift)
FIND_PATH(CASTOR_CNS_INCLUDE_DIR NAMES Cns_api.h  PATHS /usr/include/shift)
IF (CASTOR_RFIO_INCLUDE_DIR AND CASTOR_CNS_INCLUDE_DIR)
   SET (CASTOR_INCLUDE_DIR ${CASTOR_RFIO_INCLUDE_DIR} ${CASTOR_CNS_INCLUDE_DIR})
ENDIF (CASTOR_RFIO_INCLUDE_DIR AND CASTOR_CNS_INCLUDE_DIR)
SET(CASTOR_NAMES shift castorClient)

FIND_LIBRARY(CASTOR_SHIFT_LIBRARY NAMES shift )
FIND_LIBRARY(CASTOR_CLIENT_LIBRARY NAMES castorclient )
IF (CASTOR_SHIFT_LIBRARY AND CASTOR_CLIENT_LIBRARY)
   SET (CASTOR_LIBRARY ${CASTOR_SHIFT_LIBRARY} ${CASTOR_CLIENT_LIBRARY})
ENDIF (CASTOR_SHIFT_LIBRARY AND CASTOR_CLIENT_LIBRARY)

# handle the QUIETLY and REQUIRED arguments and set CASTOR_FOUND to TRUE if 
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(CASTOR REQUIRED CASTOR_LIBRARY CASTOR_INCLUDE_DIR)

IF(CASTOR_FOUND)
  SET( CASTOR_LIBRARIES ${CASTOR_LIBRARY} )
ELSE(CASTOR_FOUND)
  SET( CASTOR_LIBRARIES )
ENDIF(CASTOR_FOUND)
MARK_AS_ADVANCED( CASTOR_LIBRARY CASTOR_INCLUDE_DIR )
