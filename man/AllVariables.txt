NOTFOUNDCMAKE_AR ""
CMAKE_BASE_NAME "g++"
CMAKE_BINARY_DIR "/home/mazurov/projects/castorfs/source"
CMAKE_BUILD_TOOL "/usr/bin/make"
CMAKE_BUILD_TYPE ""
CMAKE_CACHEFILE_DIR "/home/mazurov/projects/castorfs/source"
CMAKE_CACHE_MAJOR_VERSION "2"
CMAKE_CACHE_MINOR_VERSION "6"
CMAKE_CACHE_RELEASE_VERSION "patch 2"
CMAKE_CFG_INTDIR "."
CMAKE_COLOR_MAKEFILE "ON"
CMAKE_COMMAND "/usr/bin/cmake"
CMAKE_COMPILER_IS_GNUCC "1"
CMAKE_COMPILER_IS_GNUCXX "1"
CMAKE_CPACK_COMMAND "/usr/bin/cpack"
CMAKE_CROSSCOMPILING "FALSE"
CMAKE_CTEST_COMMAND "/usr/bin/ctest"
CMAKE_CURRENT_BINARY_DIR "/home/mazurov/projects/castorfs/source/man"
CMAKE_CURRENT_LIST_FILE "/home/mazurov/projects/castorfs/source/man/CMakeLists.txt"
CMAKE_CURRENT_SOURCE_DIR "/home/mazurov/projects/castorfs/source/man"
CMAKE_CXX_ARCHIVE_APPEND "<CMAKE_AR> r  <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_CXX_ARCHIVE_CREATE "<CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>"
CMAKE_CXX_COMPILER "/usr/bin/c++"
CMAKE_CXX_COMPILER_ABI "ELF"
CMAKE_CXX_COMPILER_ARG1 ""
CMAKE_CXX_COMPILER_ENV_VAR "CXX"
CMAKE_CXX_COMPILER_ID "GNU"
CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT "/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
# define PLATFORM_ID "IRIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#else /* unknown platform */
# define PLATFORM_ID ""

#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
"
CMAKE_CXX_COMPILER_ID_RUN "1"
CMAKE_CXX_COMPILER_ID_TEST_FLAGS "-c"
CMAKE_CXX_COMPILER_INIT "NOTFOUND"
CMAKE_CXX_COMPILER_LIST "c++;g++;CC;aCC;cl;bcc;xlC"
CMAKE_CXX_COMPILER_LOADED "1"
CMAKE_CXX_COMPILER_WORKS "1"
CMAKE_CXX_COMPILE_OBJECT "<CMAKE_CXX_COMPILER>  <DEFINES> <FLAGS> -o <OBJECT> -c <SOURCE>"
CMAKE_CXX_CREATE_ASSEMBLY_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>"
CMAKE_CXX_CREATE_PREPROCESSED_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>"
CMAKE_CXX_CREATE_SHARED_LIBRARY "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_CXX_CREATE_SHARED_MODULE "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_CXX_FLAGS ""
CMAKE_CXX_FLAGS_DEBUG "-g"
CMAKE_CXX_FLAGS_DEBUG_INIT "-g"
CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG"
CMAKE_CXX_FLAGS_MINSIZEREL_INIT "-Os -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE_INIT "-O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g"
CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT "-O2 -g"
CMAKE_CXX_IGNORE_EXTENSIONS "inl;h;H;o;O;obj;OBJ;def;DEF;rc;RC"
CMAKE_CXX_INFORMATION_LOADED "1"
CMAKE_CXX_LINKER_PREFERENCE "30"
CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>"
CMAKE_CXX_OUTPUT_EXTENSION ".o"
CMAKE_CXX_PLATFORM_ID "Linux"
CMAKE_CXX_SIZEOF_DATA_PTR "4"
CMAKE_CXX_SOURCE_FILE_EXTENSIONS "C;M;c++;cc;cpp;cxx;m;mm"
CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> r  <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>"
CMAKE_C_COMPILER "/usr/bin/gcc"
CMAKE_C_COMPILER_ABI "ELF"
CMAKE_C_COMPILER_ARG1 ""
CMAKE_C_COMPILER_ENV_VAR "CC"
CMAKE_C_COMPILER_ID "GNU"
CMAKE_C_COMPILER_ID_PLATFORM_CONTENT "/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
# define PLATFORM_ID "IRIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#else /* unknown platform */
# define PLATFORM_ID ""

#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
"
CMAKE_C_COMPILER_ID_RUN "1"
CMAKE_C_COMPILER_ID_TEST_FLAGS "-c"
CMAKE_C_COMPILER_LIST "gcc;cc;cl;bcc;xlc"
CMAKE_C_COMPILER_LOADED "1"
CMAKE_C_COMPILER_WORKS "1"
CMAKE_C_COMPILE_OBJECT "<CMAKE_C_COMPILER> <DEFINES> <FLAGS> -o <OBJECT>   -c <SOURCE>"
CMAKE_C_CREATE_ASSEMBLY_SOURCE "<CMAKE_C_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>"
CMAKE_C_CREATE_PREPROCESSED_SOURCE "<CMAKE_C_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>"
CMAKE_C_CREATE_SHARED_LIBRARY "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_C_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_C_CREATE_SHARED_MODULE "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_C_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_C_FLAGS ""
CMAKE_C_FLAGS_DEBUG "-g"
CMAKE_C_FLAGS_DEBUG_INIT "-g"
CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG"
CMAKE_C_FLAGS_MINSIZEREL_INIT "-Os -DNDEBUG"
CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG"
CMAKE_C_FLAGS_RELEASE_INIT "-O3 -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g"
CMAKE_C_FLAGS_RELWITHDEBINFO_INIT "-O2 -g"
CMAKE_C_IGNORE_EXTENSIONS "h;H;o;O;obj;OBJ;def;DEF;rc;RC"
CMAKE_C_INFORMATION_LOADED "1"
CMAKE_C_LINKER_PREFERENCE "10"
CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>"
CMAKE_C_OUTPUT_EXTENSION ".o"
CMAKE_C_PLATFORM_ID "Linux"
CMAKE_C_SIZEOF_DATA_PTR "4"
CMAKE_C_SOURCE_FILE_EXTENSIONS "c"
CMAKE_DETERMINE_CXX_ABI_COMPILED "TRUE"
CMAKE_DETERMINE_C_ABI_COMPILED "TRUE"
CMAKE_DL_LIBS "dl"
CMAKE_EDIT_COMMAND "/usr/bin/ccmake"
CMAKE_EXECUTABLE_FORMAT "ELF"
CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,"
CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG "-Wl,-rpath-link,"
CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG "-Wl,-rpath,"
CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ":"
CMAKE_EXECUTABLE_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ":"
CMAKE_EXECUTABLE_SUFFIX ""
CMAKE_EXE_EXPORTS_CXX_FLAG "-Wl,--export-dynamic"
CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic"
CMAKE_EXE_LINKER_FLAGS ""
CMAKE_EXE_LINKER_FLAGS_DEBUG ""
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ""
CMAKE_EXE_LINKER_FLAGS_RELEASE ""
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_EXE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_EXE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_EXE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_EXTRA_GENERATOR ""
CMAKE_FILES_DIRECTORY "/CMakeFiles"
CMAKE_FIND_LIBRARY_PREFIXES "lib"
CMAKE_FIND_LIBRARY_SUFFIXES ".so;.a"
CMAKE_GENERATOR "Unix Makefiles"
CMAKE_HOME_DIRECTORY "/home/mazurov/projects/castorfs/source"
CMAKE_HOST_SYSTEM "Linux-2.6.28-13-generic"
CMAKE_HOST_SYSTEM_NAME "Linux"
CMAKE_HOST_SYSTEM_PROCESSOR "i686"
CMAKE_HOST_SYSTEM_VERSION "2.6.28-13-generic"
CMAKE_HOST_UNIX "1"
CMAKE_INCLUDE_FLAG_C "-I"
CMAKE_INCLUDE_FLAG_CXX "-I"
CMAKE_INCLUDE_FLAG_C_SEP ""
CMAKE_INCLUDE_SYSTEM_FLAG_C "-isystem "
CMAKE_INCLUDE_SYSTEM_FLAG_CXX "-isystem "
CMAKE_INIT_VALUE "FALSE"
CMAKE_INSTALL_PREFIX "/usr/local"
CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT "1"
CMAKE_INSTALL_SO_NO_EXE "1"
CMAKE_INTERNAL_PLATFORM_ABI "ELF"
CMAKE_LIBRARY_PATH_FLAG "-L"
CMAKE_LIBRARY_PATH_TERMINATOR ""
CMAKE_LINKER "/usr/bin/ld"
CMAKE_LINK_LIBRARY_FLAG "-l"
CMAKE_LINK_LIBRARY_SUFFIX ""
CMAKE_MAJOR_VERSION "2"
CMAKE_MAKE_PROGRAM "/usr/bin/make"
CMAKE_MATCH_0 "Makefiles"
CMAKE_MATCH_1 ""
CMAKE_MATCH_2 ""
CMAKE_MATCH_3 ""
CMAKE_MATCH_4 ""
CMAKE_MATCH_5 ""
CMAKE_MATCH_6 ""
CMAKE_MATCH_7 ""
CMAKE_MATCH_8 ""
CMAKE_MATCH_9 ""
CMAKE_MINIMUM_REQUIRED_VERSION "2.6"
CMAKE_MINOR_VERSION "6"
CMAKE_MODULE_LINKER_FLAGS ""
CMAKE_MODULE_LINKER_FLAGS_DEBUG ""
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ""
CMAKE_MODULE_LINKER_FLAGS_RELEASE ""
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_MODULE_PATH "/home/mazurov/projects/castorfs/source/macros"
CMAKE_NM "/usr/bin/nm"
CMAKE_OBJCOPY "/usr/bin/objcopy"
CMAKE_OBJDUMP "/usr/bin/objdump"
CMAKE_PARENT_LIST_FILE "/home/mazurov/projects/castorfs/source/man/CMakeLists.txt"
CMAKE_PATCH_VERSION "2"
CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "/lib;/usr/lib;/usr/lib32;/usr/lib64"
CMAKE_PLATFORM_ROOT_BIN "/home/mazurov/projects/castorfs/source/CMakeFiles"
CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME "1"
CMAKE_PROJECT_NAME "castorfs"
CMAKE_RANLIB "/usr/bin/ranlib"
CMAKE_ROOT "/usr/share/cmake-2.6"
CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "-shared"
CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-shared"
CMAKE_SHARED_LIBRARY_CXX_FLAGS "-fPIC"
CMAKE_SHARED_LIBRARY_C_FLAGS "-fPIC"
CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "-rdynamic"
CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-rdynamic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_PREFIX "lib"
CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,"
CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ":"
CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP ":"
CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SONAME_Fortran_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SUFFIX ".so"
CMAKE_SHARED_LINKER_FLAGS ""
CMAKE_SHARED_LINKER_FLAGS_DEBUG ""
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ""
CMAKE_SHARED_LINKER_FLAGS_RELEASE ""
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS "-shared"
CMAKE_SHARED_MODULE_CREATE_C_FLAGS "-shared"
CMAKE_SHARED_MODULE_CXX_FLAGS "-fPIC"
CMAKE_SHARED_MODULE_C_FLAGS "-fPIC"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_PREFIX "lib"
CMAKE_SHARED_MODULE_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_SHARED_MODULE_RUNTIME_C_FLAG_SEP ":"
CMAKE_SHARED_MODULE_SUFFIX ".so"
CMAKE_SIZEOF_VOID_P "4"
CMAKE_SKIP_RPATH "NO"
CMAKE_SOURCE_DIR "/home/mazurov/projects/castorfs/source"
CMAKE_STATIC_LIBRARY_PREFIX "lib"
CMAKE_STATIC_LIBRARY_SUFFIX ".a"
CMAKE_STRIP "/usr/bin/strip"
CMAKE_SYSTEM "Linux-2.6.28-13-generic"
CMAKE_SYSTEM_INCLUDE_PATH "/usr/include/w32api;/usr/X11R6/include;/usr/include/X11;/opt/local/include;/usr/pkg/include;/opt/csw/include;/opt/include;/usr/openwin/include"
CMAKE_SYSTEM_INFO_FILE "Platform/Linux"
CMAKE_SYSTEM_LIBRARY_PATH "/usr/lib/w32api;/usr/X11R6/lib;/usr/lib/X11;/opt/local/lib;/usr/pkg/lib;/opt/csw/lib;/opt/lib;/usr/openwin/lib"
CMAKE_SYSTEM_LOADED "1"
CMAKE_SYSTEM_NAME "Linux"
CMAKE_SYSTEM_PREFIX_PATH "/;/usr;/usr/local;/usr;/usr/local"
CMAKE_SYSTEM_PROCESSOR "i686"
CMAKE_SYSTEM_PROGRAM_PATH "/usr/pkg/bin"
CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED "1"
CMAKE_SYSTEM_VERSION "2.6.28-13-generic"
CMAKE_UNAME "/bin/uname"
CMAKE_VERBOSE_MAKEFILE "FALSE"
CPACK_PACKAGE_CONTACT "Alexander MAZUROV (alexander.mazurov@cern.ch)"
CPACK_PACKAGE_DESCRIPTION_FILE "/home/mazurov/projects/castorfs/source/ReadMe.txt"
CPACK_PACKAGE_DESCRIPTION_SUMMARY "FUSE wrapper for CASTOR"
CPACK_PACKAGE_RELEASE "2"
CPACK_PACKAGE_VENDOR "LHCb Online Team (lbtbsupp@cern.ch)"
CPACK_PACKAGE_VERSION "0.1.0"
CPACK_PACKAGE_VERSION_MAJOR "0"
CPACK_PACKAGE_VERSION_MINOR "1"
CPACK_PACKAGE_VERSION_PATCH "0"
CPACK_RESOURCE_FILE_LICENSE "/home/mazurov/projects/castorfs/source/Copyright.txt"
CXX_TEST_WAS_RUN "1"
C_TEST_WAS_RUN "1"
DATE ""
EXECUTABLE_OUTPUT_PATH "/home/mazurov/projects/castorfs/source/bin"
GZIP_TOOL "/bin/gzip"
OUTPUT "Change Dir: /home/mazurov/projects/castorfs/source/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/home/mazurov/projects/castorfs/source/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/mazurov/projects/castorfs/source/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec.dir/testCXXCompiler.cxx.o
/usr/bin/c++     -o CMakeFiles/cmTryCompileExec.dir/testCXXCompiler.cxx.o -c /home/mazurov/projects/castorfs/source/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
Linking CXX executable cmTryCompileExec
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec.dir/link.txt --verbose=1
/usr/bin/c++         CMakeFiles/cmTryCompileExec.dir/testCXXCompiler.cxx.o  -o cmTryCompileExec -rdynamic 
make[1]: Leaving directory `/home/mazurov/projects/castorfs/source/CMakeFiles/CMakeTmp'
"
PACKAGE_VERSION "0.1.0"
PRESET_CMAKE_SYSTEM_NAME "FALSE"
PROJECT_BINARY_DIR "/home/mazurov/projects/castorfs/source"
PROJECT_NAME "castorfs"
PROJECT_SOURCE_DIR "/home/mazurov/projects/castorfs/source"
RUN_CONFIGURE "ON"
UNIX "1"
_CMAKE_INSTALL_DIR "/usr"
_CMAKE_TOOLCHAIN_LOCATION "/usr/bin"
_INCLUDED_FILE "NOTFOUND"
_INCLUDED_SYSTEM_INFO_FILE "/usr/share/cmake-2.6/Modules/Platform/Linux.cmake"
castorfs_BINARY_DIR "/home/mazurov/projects/castorfs/source"
castorfs_SOURCE_DIR "/home/mazurov/projects/castorfs/source"
castorfs_man_gz "castorfs.1.gz"
castorfs_man_src "castorfs.1"
man ""
type ""
val "0"
